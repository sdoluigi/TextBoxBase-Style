<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:apt="clr-namespace:TextBoxBase_Style.Styles"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    
    <Style x:Key="TextBoxBase"  TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="apt:AttacchedProperties.SelectAllOnEntry" Value="True" />
        <Setter Property="BorderBrush" Value="DarkGray" />
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Margin" Value="1,3,3,3"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <Grid >
                        <AdornedElementPlaceholder/>
                        <Border Background="Red" 
                            CornerRadius="7" 
                            Height="14"
                            HorizontalAlignment="Right" 
                            Margin="0,2,7,2"
                            VerticalAlignment="Center"
                            Width="14">
                            <TextBlock FontFamily="Verdana"
                                   FontSize="11"
                                   FontWeight="Bold"
                                   Foreground="White" 
                                   HorizontalAlignment="Center"
                                   Text="!" 
                                   VerticalAlignment="Center"
                                   />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <Grid>
                            <Polygon x:Name="IsMandatoryPolygon" Points="0,0 8,0 0,8 0,0" Margin="0,2,2,0" HorizontalAlignment="Right" Fill="Red" FlowDirection="RightToLeft" Visibility="Collapsed"/>
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                            <Label Margin="5,0,0,0" x:Name="WaterMarkLabel" Content="{TemplateBinding apt:AttacchedProperties.ExampleLabel}" VerticalAlignment="Center"
                           Visibility="Collapsed" Foreground="Gray" FontFamily="Verdana" FontSize="7" FontWeight="Bold"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text" Value=""/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="WaterMarkLabel" Value="Visible"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="DimGray"/>
                        </Trigger>
                        <Trigger Property="apt:AttacchedProperties.IsMandatory" Value="True">
                            <Setter Property="Visibility" TargetName="IsMandatoryPolygon" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="true">
                <Setter Property="Background" Value="LightYellow"/>
            </Trigger>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip" Value="{Binding Path=(Validation.Errors)[0].ErrorContent, RelativeSource={x:Static RelativeSource.Self}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>